plugins {
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "4.4.1.3373"
}

group 'org.uid'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.7'
    implementation 'com.j256.ormlite:ormlite-jdbc:6.1'
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.7'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-suite-engine'
    testImplementation 'org.junit.platform:junit-platform-suite-api'

    testImplementation 'com.j256.ormlite:ormlite-jdbc:6.1'
    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    testImplementation 'org.xerial:sqlite-jdbc:3.43.2.2'
    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    testImplementation 'com.zaxxer:HikariCP:5.1.0'




}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}


jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacoco {
    toolVersion = "0.8.9"
    reportsDirectory = layout.buildDirectory.dir('reports/jacoco')
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('html/jacoco')
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "org/uid/exception/*"
            ])
        }))
    }
}

jar {

//    manifest {
//        attributes "Main-Class": "package.Application"
//    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

sonar {
    properties {
        property "sonar.projectKey", "kgsnipes_unique-identifier"
        property "sonar.organization", "kgsnipes"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths" , "build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.gradle.skipCompile", "true"
        property "sonar.coverage.exclusions", "**/*Test.java"
    }
}